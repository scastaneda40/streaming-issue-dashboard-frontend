import { execute, } from 'graphql';
import { BadRequestError } from './internalErrorClasses.js';
import { MEDIA_TYPES } from './ApolloServer.js';
let graphqlExperimentalExecuteIncrementally = undefined;
let legacyExecuteIncrementally;
async function tryToLoadLegacyExecuteIncrementally() {
    try {
        const transform = await import('@yaacovcr/transform');
        legacyExecuteIncrementally = transform.legacyExecuteIncrementally;
    }
    catch {
        legacyExecuteIncrementally = null;
    }
}
async function tryToLoadGraphQL17() {
    if (graphqlExperimentalExecuteIncrementally !== undefined &&
        legacyExecuteIncrementally !== undefined) {
        return;
    }
    const graphql = await import('graphql');
    if (graphql.version === '17.0.0-alpha.9' &&
        'experimentalExecuteIncrementally' in graphql) {
        await tryToLoadLegacyExecuteIncrementally();
        graphqlExperimentalExecuteIncrementally = graphql
            .experimentalExecuteIncrementally;
    }
    else {
        graphqlExperimentalExecuteIncrementally = null;
    }
}
export async function executeIncrementally({ useLegacyIncremental, ...args }) {
    await tryToLoadGraphQL17();
    if (useLegacyIncremental) {
        if (legacyExecuteIncrementally) {
            return legacyExecuteIncrementally(args);
        }
        if (graphqlExperimentalExecuteIncrementally) {
            throw new BadRequestError('Apollo Server received an operation that uses incremental delivery ' +
                '(@defer or @stream) with the legacy incremental format, but the server ' +
                'does not support the legacy incremental delivery format. Add the HTTP ' +
                `header: 'Accept: ${MEDIA_TYPES.MULTIPART_MIXED_EXPERIMENTAL_ALPHA_9}' ` +
                'to use the current incremental delivery format', { extensions: { http: { status: 406 } } });
        }
    }
    if (graphqlExperimentalExecuteIncrementally) {
        return graphqlExperimentalExecuteIncrementally(args);
    }
    return execute(args);
}
//# sourceMappingURL=incrementalDeliveryPolyfill.js.map